{"version":3,"file":"static/js/HomePage.78e314a0.chunk.js","mappings":"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","sources":["components/services/settings.jsx","components/services/APIRequests.jsx","components/views/HomePage.jsx"],"sourcesContent":["const settings = {\n  API_KEY: '5ff0c13d688b2eddbe0c220a112dc9cb',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n\nexport default settings;\n","import settings from './settings';\n\nconst { BASE_URL, API_KEY } = settings;\n\nasync function fetchSearchByKeyword(q, page) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${q}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchTrending(page = 1) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieInfo(id) {\n  const response = await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieCredits(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nconst api = {\n  fetchSearchByKeyword,\n  fetchTrending,\n  fetchFullMovieInfo,\n  fetchFullMovieCredits,\n  fetchFullMovieReviews,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport imagesAPI from 'components/services/APIRequests';\nimport PropTypes from 'prop-types';\n\nconst HomePage = ({ GoBack }) => {\n  const { url } = useRouteMatch();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [movies, setTMovies] = useState(null);\n  const [unmount, setUnmount] = useState(false);\n\n  useEffect(() => {\n    if (unmount) {\n      return;\n    }\n\n    GoBack(`${url}`);\n\n    imagesAPI\n      .fetchTrending()\n      .then(trendingMovies => {\n        setTMovies(trendingMovies.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n\n    return () => {\n      setUnmount(true);\n    };\n  }, [unmount, GoBack, url]);\n\n  return (\n    <div>\n      {status === 'rejected' && <h1>{error.massage}</h1>}\n      {status === 'resolved' && (\n        <div>\n          <h1>Trending today</h1>\n          <ul>\n            {movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`${url}movies/${movie.id}`}>\n                    {movie.original_title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nHomePage.propTypes = {\n  GoBack: PropTypes.func.isRequired,\n};\n\nexport default HomePage;\n"],"names":["API_KEY","BASE_URL","settings","fetchSearchByKeyword","q","page","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchFullMovieInfo","id","fetchFullMovieCredits","fetchFullMovieReviews","api","GoBack","url","useRouteMatch","useState","error","setError","status","setStatus","movies","setTMovies","unmount","setUnmount","useEffect","imagesAPI","then","trendingMovies","results","catch","massage","map","movie","to","original_title"],"sourceRoot":""}