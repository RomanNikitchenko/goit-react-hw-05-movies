{"version":3,"file":"static/js/MovieDetailsPage.26d64568.chunk.js","mappings":"qMAKA,EALiB,CACfA,QAAS,mCACTC,SAAU,iCCAJA,EAAsBC,EAAAA,SAAZF,EAAYE,EAAAA,QAEfC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoCC,GAApC,4FAAuCC,EAAvC,+BAA8C,EAA9C,SACyBC,MAAM,GAAD,OACvBL,EADuB,gCACSD,EADT,kBAC0BI,EAD1B,iBACoCC,IAFlE,YACQE,EADR,QAKkBC,GALlB,iCAMYD,EAASE,OANrB,gDAOMC,QAAQC,OAAO,IAAIC,MAAM,cAP/B,2GAUeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAA6BR,EAA7B,+BAAoC,EAApC,SACyBC,MAAM,GAAD,OACvBL,EADuB,sCACeD,EADf,iBAC+BK,IAF7D,YACQE,EADR,QAKkBC,GALlB,iCAMYD,EAASE,OANrB,gDAOMC,QAAQC,OAAO,IAAIC,MAAM,cAP/B,2GAUeE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFACyBT,MAAM,GAAD,OAAIL,EAAJ,iBAAqBc,EAArB,oBAAmCf,IADjE,YACQO,EADR,QAGkBC,GAHlB,gCAIYD,EAASE,OAJrB,+CAKMC,QAAQC,OAAO,IAAIC,MAAM,cAL/B,0GAQeI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCD,GAArC,uFACyBT,MAAM,GAAD,OACvBL,EADuB,iBACNc,EADM,4BACgBf,IAF9C,YACQO,EADR,QAKkBC,GALlB,gCAMYD,EAASE,OANrB,+CAOMC,QAAQC,OAAO,IAAIC,MAAM,cAP/B,0GAUeK,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCF,GAArC,uFACyBT,MAAM,GAAD,OACvBL,EADuB,iBACNc,EADM,4BACgBf,EADhB,2BAD9B,YACQO,EADR,QAKkBC,GALlB,gCAMYD,EAASE,OANrB,+CAOMC,QAAQC,OAAO,IAAIC,MAAM,cAP/B,0GAUA,IAAMM,EAAM,CACVf,qBAnDF,SAEoC,GAArBA,OAAAA,EAAAA,MAAAA,KAAAA,YAkDbU,cAlDF,WAUeA,OAAAA,EAAAA,MAAAA,KAAAA,YAyCbC,mBAzCF,SAUkC,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,YAgCbE,sBAhCF,SAQqC,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,YAyBbC,sBAzBF,SAUqC,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,aAkBf,K,kHC3DA,EAAuB,kBAAvB,EAAsD,wC,SCchDE,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAElBC,GAAUD,EAAAA,EAAAA,OAAK,kBACnB,gCA6FF,EA1FyB,WACvB,OAAsBE,EAAAA,EAAAA,MAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACLC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAoCN,EAAAA,EAAAA,UAClC,sFADF,eAAOO,EAAP,KAAmBC,EAAnB,KAGA,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAiBJ,OAbAG,EAAAA,EAAAA,mBACsBd,GACnBe,MAAK,SAAAR,GACJC,EAASD,GACa,OAAtBA,EAAMS,aACJN,EAAc,kCAAD,OAAmCH,EAAMS,cACxDV,EAAU,eAEXW,OAAM,SAAAd,GACLC,EAASD,GACTG,EAAU,eAGP,WACLM,GAAW,MAEZ,CAACZ,EAAUW,KAGZ,2BACc,aAAXN,IAAyB,wBAAKF,EAAMe,UACzB,aAAXb,IACC,4BACE,mBACA,0BACE,mBAAQc,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAG,IAAT,0EAGJ,mBACA,gBAAKC,IAAKZ,EAAYa,IAAKf,EAAMgB,SACjC,mBACA,qDAEE,2BACE,yBACE,SAAC,KAAD,CACEC,OAAK,EACLC,UAAWC,EACXC,gBAAiBD,EACjBN,GAAE,UAAKtB,EAAL,SAJJ,qBASF,yBACE,SAAC,KAAD,CACE0B,OAAK,EACLC,UAAWC,EACXC,gBAAiBD,EACjBN,GAAE,UAAKtB,EAAL,YAJJ,2BAUJ,mBACA,SAAC,EAAA8B,SAAD,CAAUC,UAAU,sFAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAO9B,KAAI,UAAKA,EAAL,SAAkByB,OAAK,EAAlC,UACE,SAAC9B,EAAD,OAEF,SAAC,KAAD,CAAOK,KAAI,UAAKA,EAAL,YAAqByB,OAAK,EAArC,UACE,SAAC5B,EAAD","sources":["components/services/settings.jsx","components/services/APIRequests.jsx","webpack://react-homework-template/./src/components/App.module.css?6c4d","components/views/MovieDetailsPage.jsx"],"sourcesContent":["const settings = {\n  API_KEY: '5ff0c13d688b2eddbe0c220a112dc9cb',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n\nexport default settings;\n","import settings from './settings';\n\nconst { BASE_URL, API_KEY } = settings;\n\nasync function fetchSearchByKeyword(q, page = 1) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${q}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchTrending(page = 1) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieInfo(id) {\n  const response = await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieCredits(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nconst api = {\n  fetchSearchByKeyword,\n  fetchTrending,\n  fetchFullMovieInfo,\n  fetchFullMovieCredits,\n  fetchFullMovieReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"App_link__91nmW\",\"activeLink\":\"App_activeLink__Pj8iz App_link__91nmW\"};","import { lazy, Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Link,\n  useParams,\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport imagesAPI from 'components/services/APIRequests';\nimport styles from 'components/App.module.css';\n// import Cast from './Cast';\n// import Reviews from './Reviews';\n\nconst Cast = lazy(() => import('./Cast.jsx' /* webpackChunkName: \"Cast\" */));\n\nconst Reviews = lazy(() =>\n  import('./Reviews.jsx' /* webpackChunkName: \"Reviews\" */)\n);\n\nconst MovieDetailsPage = () => {\n  const { url, path } = useRouteMatch();\n  const { moviesId } = useParams();\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const [posterLink, setPosterLink] = useState(\n    'https://blankposter.com/wp-content/uploads/2021/11/Andrea_Busi_Wack-1-860x1204.jpg'\n  );\n  const [unmount, setUnmount] = useState(false);\n\n  useEffect(() => {\n    if (unmount) {\n      return;\n    }\n\n    imagesAPI\n      .fetchFullMovieInfo(moviesId)\n      .then(movie => {\n        setMovie(movie);\n        movie.poster_path !== null &&\n          setPosterLink(`https://image.tmdb.org/t/p/w300${movie.poster_path}`);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n\n    return () => {\n      setUnmount(true);\n    };\n  }, [moviesId, unmount]);\n\n  return (\n    <div>\n      {status === 'rejected' && <h1>{error.massage}</h1>}\n      {status === 'resolved' && (\n        <div>\n          <hr />\n          <div>\n            <button type=\"button\">\n              <Link to=\"/\">на главную</Link>\n            </button>\n          </div>\n          <hr />\n          <img src={posterLink} alt={movie.title} />\n          <hr />\n          <div>\n            Additional information\n            <ul>\n              <li>\n                <NavLink\n                  exact\n                  className={styles.link}\n                  activeClassName={styles.activeLink}\n                  to={`${url}/casr`}\n                >\n                  Casr\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  exact\n                  className={styles.link}\n                  activeClassName={styles.activeLink}\n                  to={`${url}/reviews`}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n            <hr />\n            <Suspense fallback={<h1>ЗАГРУЖАЕМ...</h1>}>\n              <Switch>\n                <Route path={`${path}/casr`} exact>\n                  <Cast />\n                </Route>\n                <Route path={`${path}/reviews`} exact>\n                  <Reviews />\n                </Route>\n              </Switch>\n            </Suspense>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["API_KEY","BASE_URL","settings","fetchSearchByKeyword","q","page","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchFullMovieInfo","id","fetchFullMovieCredits","fetchFullMovieReviews","api","Cast","lazy","Reviews","useRouteMatch","url","path","moviesId","useParams","useState","error","setError","status","setStatus","movie","setMovie","posterLink","setPosterLink","unmount","setUnmount","useEffect","imagesAPI","then","poster_path","catch","massage","type","to","src","alt","title","exact","className","styles","activeClassName","Suspense","fallback"],"sourceRoot":""}