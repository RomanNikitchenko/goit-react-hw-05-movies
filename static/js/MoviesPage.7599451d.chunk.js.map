{"version":3,"file":"static/js/MoviesPage.7599451d.chunk.js","mappings":"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","sources":["components/services/settings.jsx","components/services/APIRequests.jsx","components/views/MoviesPage.jsx"],"sourcesContent":["const settings = {\n  API_KEY: '5ff0c13d688b2eddbe0c220a112dc9cb',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n\nexport default settings;\n","import settings from './settings';\n\nconst { BASE_URL, API_KEY } = settings;\n\nasync function fetchSearchByKeyword(q, page = 1) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${q}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchTrending(page = 1) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieInfo(id) {\n  const response = await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieCredits(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nconst api = {\n  fetchSearchByKeyword,\n  fetchTrending,\n  fetchFullMovieInfo,\n  fetchFullMovieCredits,\n  fetchFullMovieReviews,\n};\n\nexport default api;\n","import { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport imagesAPI from 'components/services/APIRequests';\n\nconst MoviesPage = () => {\n  const { url } = useRouteMatch();\n  const [moviesName, setMoviesName] = useState('');\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [movies, setMovies] = useState(null);\n  const [unmount, setUnmount] = useState(true);\n\n  const handleNameChange = e => {\n    setMoviesName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (moviesName.trim() === '') {\n      alert('введите имя изображения');\n      return;\n    }\n\n    setUnmount(false);\n  };\n\n  useEffect(() => {\n    if (unmount) {\n      return;\n    }\n\n    imagesAPI\n      .fetchSearchByKeyword(moviesName)\n      .then(movies => {\n        setMovies(movies.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n\n    return () => {\n      setUnmount(true);\n    };\n  }, [unmount, moviesName]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <Link to={`${url}/${moviesName}`}>Найти</Link>\n        </button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Search movies and photos\"\n          onChange={handleNameChange}\n          value={moviesName}\n        />\n      </form>\n      {status === 'rejected' && <h1>{error.massage}</h1>}\n      {status === 'resolved' && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${url}/${movie.id}`}>{movie.original_title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","BASE_URL","settings","fetchSearchByKeyword","q","page","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchFullMovieInfo","id","fetchFullMovieCredits","fetchFullMovieReviews","api","url","useRouteMatch","useState","moviesName","setMoviesName","error","setError","status","setStatus","movies","setMovies","unmount","setUnmount","useEffect","imagesAPI","then","results","catch","onSubmit","e","preventDefault","trim","alert","type","to","placeholder","onChange","currentTarget","value","toLowerCase","massage","map","movie","original_title"],"sourceRoot":""}