{"version":3,"file":"static/js/MoviesPage.a6567297.chunk.js","mappings":"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","sources":["components/services/settings.jsx","components/services/APIRequests.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/views/MoviesPage.jsx"],"sourcesContent":["const settings = {\n  API_KEY: '5ff0c13d688b2eddbe0c220a112dc9cb',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n\nexport default settings;\n","import settings from './settings';\n\nconst { BASE_URL, API_KEY } = settings;\n\nasync function fetchSearchByKeyword(q, page) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${q}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchTrending(page = 1) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieInfo(id) {\n  const response = await fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieCredits(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nasync function fetchFullMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nconst api = {\n  fetchSearchByKeyword,\n  fetchTrending,\n  fetchFullMovieInfo,\n  fetchFullMovieCredits,\n  fetchFullMovieReviews,\n};\n\nexport default api;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useEffect } from 'react';\nimport { Link, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\nimport imagesAPI from 'components/services/APIRequests';\nimport PropTypes from 'prop-types';\n\nconst MoviesPage = ({ GoBack }) => {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  const [moviesName, setMoviesName] = useState('');\n  const [page] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [movies, setMovies] = useState(null);\n\n  const handleNameChange = e => {\n    setMoviesName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (moviesName.trim() === '') {\n      alert('введите имя фильма');\n      return;\n    }\n\n    history.push({\n      ...location,\n      search: `query=${moviesName}`,\n    });\n  };\n\n  useEffect(() => {\n    if (location.search === '') {\n      return;\n    }\n\n    const getFromlocationSearch = new URLSearchParams(location.search).get(\n      'query'\n    );\n\n    setMoviesName(getFromlocationSearch);\n\n    GoBack(`${url}${location.search}`);\n\n    imagesAPI\n      .fetchSearchByKeyword(getFromlocationSearch, page)\n      .then(movies => {\n        setMovies(movies.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [history, location, page, GoBack, url]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">найти</button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Search movies and photos\"\n          onChange={handleNameChange}\n          value={moviesName}\n        />\n      </form>\n      {status === 'rejected' && <h1>{error.massage}</h1>}\n      {status === 'resolved' && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${url}/${movie.id}`}>{movie.original_title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nMoviesPage.propTypes = {\n  GoBack: PropTypes.func.isRequired,\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","BASE_URL","settings","fetchSearchByKeyword","q","page","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchFullMovieInfo","id","fetchFullMovieCredits","fetchFullMovieReviews","api","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","GoBack","url","useRouteMatch","history","useHistory","location","useLocation","useState","moviesName","setMoviesName","error","setError","status","setStatus","movies","setMovies","useEffect","search","getFromlocationSearch","URLSearchParams","get","imagesAPI","then","results","catch","onSubmit","e","preventDefault","trim","alert","type","placeholder","onChange","currentTarget","toLowerCase","massage","map","movie","to","original_title"],"sourceRoot":""}